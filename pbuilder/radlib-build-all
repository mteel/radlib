#!/bin/sh

# Script to build all radlib debian packages and upload to the
# local repository for use in wview builds.

if [ "$1" = "" ]; then
    echo "You must specify a radlib version number (x.y.z)!"
    echo "Usage: radlib-build-all radlib_version [distribution] [architecture]"
    exit 1
else
    VERS=$1
fi

if [ "$2" != "" ]; then
    # User wants to build a specific DIST:
    DISTS="$2"
else
    DISTS="lenny jaunty karmic lucid"
fi
# etch squeeze sid maverick natty

# distros to create via forward copy:
DEBIAN_ADDONS="squeeze sid"
UBUNTU_ADDONS="maverick natty"

if [ "$3" != "" ]; then
    ARCHS="$3"
else
    ARCHS="i386 amd64"
fi
# armel

cd ~/dev/pbuilder
if [ ! -e /mnt/data/temp/radlib-$VERS.tar.gz ]; then
    echo "Version $VERS tarball does not exist - abort!"
    exit 1
else
    cp /mnt/data/temp/radlib-$VERS.tar.gz .
fi

for DIST in ${DISTS}
do
    # Clean up anything in the local repo:
    if [ -e /var/cache/archive/${DIST} ]; then
        rm -f /var/cache/archive/${DIST}/*
    fi

    # Loop through architectures:
    for ARCH in ${ARCHS}
    do
        echo "###########################################################################"
        echo "                  Starting deb build for ${DIST}-${ARCH}"
        echo "###########################################################################"

        # extract the prestine tarball:
        cd ~/dev/pbuilder/radlib
        cp ../radlib-$VERS.tar.gz .
        tar xzf radlib-$VERS.tar.gz
        sudo rm -f /var/cache/pbuilder/${DIST}-${ARCH}/result/*

        # create the pbuilder chroot env if it does not exist:
        cd radlib-$VERS
        if [ ! -e /var/cache/pbuilder/${DIST}-${ARCH} ]; then
            sudo DIST=${DIST} ARCH=${ARCH} pbuilder create
        else
            sudo DIST=${DIST} ARCH=${ARCH} pbuilder update --override-config --configfile ~/.pbuilderrc
        fi

        # build the pkg in the chroot jail:
        DIST=${DIST} ARCH=${ARCH} pdebuild --buildresult "/var/cache/pbuilder/${DIST}-${ARCH}/result" \
                                           --debbuildopts "-a${ARCH}" \
                                           --logfile "../pdebuild.log"

        # save it to our local "repository":
        if [ -e /var/cache/pbuilder/${DIST}-${ARCH}/result/radlib*.changes ]; then
            if [ ! -e /var/cache/archive/${DIST} ]; then
                mkdir -p /var/cache/archive/${DIST}
            fi
            cp /var/cache/pbuilder/${DIST}-${ARCH}/result/*.deb /var/cache/archive/${DIST}
        else
            echo "${DIST}-${ARCH}/result/radlib*.changes does not exist!"
            echo "Did ${DIST}-${ARCH} build fail or do you need to create with pbuilder?"
            exit 1
        fi

        # Save to the file server:
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}
        else
            rm -rf /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}/*
        fi
        cp -f /var/cache/pbuilder/${DIST}-${ARCH}/result/* /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}

        # remove everything to start fresh:
        cd ~/dev/pbuilder/radlib
        rm -rf radlib-$VERS*

        echo "###########################################################################"
        echo "                           ${DIST}-${ARCH} DONE!"
        echo "###########################################################################"
    done

    # build the packages file here:
    cd /var/cache/archive/${DIST}
    sudo apt-ftparchive packages . > Packages

done

# ----------------------------------------------------------------------------
# Now build the addons; these are newer dists that we use older dists to satisfy:

# First do the debian:
for DIST in ${DEBIAN_ADDONS}
do
    # Clean up anything in the local repo:
    if [ -e /var/cache/archive/${DIST} ]; then
        rm -f /var/cache/archive/${DIST}/*
    fi

    # Loop through architectures:
    for ARCH in ${ARCHS}
    do
        echo "###########################################################################"
        echo "                  Starting deb add-on for ${DIST}-${ARCH}"
        echo "###########################################################################"

        # save it to our local "repository":
        sudo mkdir -p /var/cache/pbuilder/${DIST}-${ARCH}
        sudo mkdir -p /var/cache/pbuilder/${DIST}-${ARCH}/result
        sudo cp /var/cache/pbuilder/lenny-${ARCH}/result/*.* /var/cache/pbuilder/${DIST}-${ARCH}/result
        if [ ! -e /var/cache/archive/${DIST} ]; then
            mkdir -p /var/cache/archive/${DIST}
        fi
        cp /var/cache/pbuilder/${DIST}-${ARCH}/result/*.deb /var/cache/archive/${DIST}

        # Save to the file server:
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}
        else
            rm -rf /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}/*
        fi
        cp -f /var/cache/pbuilder/${DIST}-${ARCH}/result/* /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}

        echo "###########################################################################"
        echo "                           ${DIST}-${ARCH} DONE!"
        echo "###########################################################################"
    done

    # build the packages file here:
    cd /var/cache/archive/${DIST}
    sudo apt-ftparchive packages . > Packages

done

# Now do the ubuntu:
for DIST in ${UBUNTU_ADDONS}
do
    # Clean up anything in the local repo:
    if [ -e /var/cache/archive/${DIST} ]; then
        rm -f /var/cache/archive/${DIST}/*
    fi

    # Loop through architectures:
    for ARCH in ${ARCHS}
    do
        echo "###########################################################################"
        echo "                  Starting deb add-on for ${DIST}-${ARCH}"
        echo "###########################################################################"

        # save it to our local "repository":
        sudo mkdir -p /var/cache/pbuilder/${DIST}-${ARCH}
        sudo mkdir -p /var/cache/pbuilder/${DIST}-${ARCH}/result
        sudo cp /var/cache/pbuilder/lucid-${ARCH}/result/*.* /var/cache/pbuilder/${DIST}-${ARCH}/result
        if [ ! -e /var/cache/archive/${DIST} ]; then
            mkdir -p /var/cache/archive/${DIST}
        fi
        cp /var/cache/pbuilder/${DIST}-${ARCH}/result/*.deb /var/cache/archive/${DIST}

        # Save to the file server:
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}
        fi
        if [ ! -e /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH} ]; then
            mkdir -p /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}
        else
            rm -rf /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}/*
        fi
        cp -f /var/cache/pbuilder/${DIST}-${ARCH}/result/* /mnt/data/info/release/debian/radlib/${VERS}/${DIST}/${ARCH}

        echo "###########################################################################"
        echo "                           ${DIST}-${ARCH} DONE!"
        echo "###########################################################################"
    done

    # build the packages file here:
    cd /var/cache/archive/${DIST}
    sudo apt-ftparchive packages . > Packages

done


exit 0
